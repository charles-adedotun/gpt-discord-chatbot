name: Build and Deploy Bot

on:
  push:
    branches: [main]

env:
  AWS_REGION: us-east-1
  AWS_ACCOUNT_ID: "433826697239"
  ECR_REPOSITORY: gpt-discord-chatbot
  IMAGE_NAME: gpt-discord-chatbot
  
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build Docker image
      run: |
        docker build -t ${{ env.IMAGE_NAME }} .

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Login to AWS ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
        
    - name: Push Docker image to ECR
      run: |
        docker tag ${{ env.IMAGE_NAME }}:latest ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:latest
        docker push ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:latest

    - name: Install AWS CLI
      run: |
        pip install awscli

    - name: Update ECS service
      run: |
        aws ecs update-service --cluster ${{ env.IMAGE_NAME }}-cluster --service ${{ env.IMAGE_NAME }}-service-1 --force-new-deployment
        echo 'ECS service updated successfully!'
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
